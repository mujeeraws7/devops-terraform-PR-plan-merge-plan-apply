name: Terraform CI/CD

on:
  workflow_dispatch: 
jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5 # or your version

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -no-color
        id: plan

      - name: Post Plan Output to PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: terraform-plan
          message: |
            ### Terraform Plan Result
            ```
            ${{ steps.plan.outputs.stdout }}
            ```
            âœ… Run `terraform apply` will occur **after merge** to `main`.

  terraform-apply:
    name: Terraform Apply (Manual Confirmation)
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: production
      # this will require manual approval before running the job
      url: https://github.com/${{ github.repository }}/deployments
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply (with confirmation)
        run: terraform apply -auto-approve
  delete-merged-branch:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    name: Auto Delete Merged Branch

    steps:
      - name: Delete feature branch after merge
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          BRANCH: ${{ github.event.pull_request.head.ref }}
          REPO: ${{ github.repository }}
        run: |
          if [[ "$BRANCH" != "main" && "$BRANCH" != "master" ]]; then
            echo "Deleting merged branch: $BRANCH"
            curl -X DELETE \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/$REPO/git/refs/heads/$BRANCH
          else
            echo "Skipping protected branch: $BRANCH"
          fi
